{"version":3,"file":"static/js/167.0cd0710d.js","mappings":"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","sources":["webpack://miochyan/./node_modules/core-js/internals/regexp-flags.js","webpack://miochyan/./node_modules/core-js/modules/es.regexp.flags.js","webpack://miochyan/./node_modules/@videojs/xhr/lib/http-handler.js","webpack://miochyan/./node_modules/@videojs/xhr/lib/index.js","webpack://miochyan/./node_modules/@xmldom/xmldom/lib/conventions.js","webpack://miochyan/./node_modules/@xmldom/xmldom/lib/dom-parser.js","webpack://miochyan/./node_modules/@xmldom/xmldom/lib/dom.js","webpack://miochyan/./node_modules/@xmldom/xmldom/lib/entities.js","webpack://miochyan/./node_modules/@xmldom/xmldom/lib/index.js","webpack://miochyan/./node_modules/@xmldom/xmldom/lib/sax.js","webpack://miochyan/./node_modules/global/document.js","webpack://miochyan/./node_modules/global/window.js","webpack://miochyan/./node_modules/is-function/index.js","webpack://miochyan/./node_modules/keycode/index.js","webpack://miochyan/./node_modules/mux.js/lib/tools/parse-sidx.js","webpack://miochyan/./node_modules/mux.js/lib/utils/clock.js","webpack://miochyan/./node_modules/mux.js/lib/utils/numbers.js","webpack://miochyan/./node_modules/safe-json-parse/tuple.js","webpack://miochyan/./node_modules/url-toolkit/src/url-toolkit.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://miochyan/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://miochyan/./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","webpack://miochyan/./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://miochyan/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/codecs.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/media-types.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/byte-helpers.js","webpack://miochyan/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://miochyan/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/media-groups.js","webpack://miochyan/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://miochyan/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/mp4-helpers.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/id3-helpers.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/opus-helpers.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/ebml-helpers.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/nal-helpers.js","webpack://miochyan/./node_modules/@videojs/vhs-utils/es/containers.js","webpack://miochyan/./node_modules/video.js/dist/video.es.js","webpack://miochyan/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://miochyan/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://miochyan/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://miochyan/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://miochyan/./src/components/LiveCom/MainView.vue","webpack://miochyan/./src/components/LiveCom/LiveStop.vue","webpack://miochyan/./src/components/LiveCom/LiveStop.vue?715c","webpack://miochyan/./src/components/LiveCom/MainView.vue?25ea","webpack://miochyan/./src/components/HeaderCom.vue","webpack://miochyan/./src/components/HeaderCom.vue?37d7","webpack://miochyan/./src/views/LiveView.vue","webpack://miochyan/./node_modules/@babel/runtime/helpers/extends.js"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 6.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const daterangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.daterange = this.manifest.daterange || [];\n              this.manifest.daterange.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.daterange.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const daterange = this.manifest.daterange[index];\n\n              if (daterange.endDate && daterange.startDate && new Date(daterange.endDate) < new Date(daterange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (daterange.duration && daterange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (daterange.plannedDuration && daterange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!daterange.endOnNext;\n\n              if (endOnNextYes && !daterange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (daterange.duration || daterange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (daterange.duration && daterange.endDate) {\n                const startDate = daterange.startDate;\n                const newDateInSeconds = startDate.setSeconds(startDate.getSeconds() + daterange.duration);\n                this.manifest.daterange[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (daterange && !this.manifest.dateTimeString) {\n                this.trigger('warn', {\n                  message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n                });\n              }\n\n              if (!daterangeTags[daterange.id]) {\n                daterangeTags[daterange.id] = daterange;\n              } else {\n                for (const attribute in daterangeTags[daterange.id]) {\n                  if (daterangeTags[daterange.id][attribute] !== daterange[attribute]) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes and same attribute values'\n                    });\n                    break;\n                  }\n                }\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name mpd-parser @version 1.1.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.1.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  const mergedPlaylists = values(playlists.reduce((acc, playlist) => {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n    if (!acc[name]) {\n      // First Period\n      acc[name] = playlist;\n      acc[name].attributes.timelineStarts = [];\n    } else {\n      // Subsequent Periods\n      if (playlist.segments) {\n        // first segment of subsequent periods signal a discontinuity\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        acc[name].segments.push(...playlist.segments);\n      } // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    }\n\n    acc[name].attributes.timelineStarts.push({\n      // Although they represent the same number, it's important to have both to make it\n      // compatible with HLS potentially having a similar attribute.\n      start: playlist.attributes.periodStart,\n      timeline: playlist.attributes.periodStart\n    });\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  return {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nconst buildBaseUrls = (referenceUrls, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, {\n        baseUrl\n      })\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throwsw on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.3.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.3.0\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nconst LogByTypeFactory = (name, log) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(name + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = subname => createLogger$1(name + ': ' + subname);\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {}\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {}\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {}\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return { import('./player').default }\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param { import('./time').TimeRange } buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param { import('../tech/tech').default } tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  { import('./utils/dom').ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return { import('./utils/dom').ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { import('./track').default[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param { import('./track').default } track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param { import('./track').default } rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return { import('./track').default }\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param { import('./audio-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param { import('./audio-track').default } track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param { import('./video-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param { import('./video-track').default } track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param { import('./text-track').default } track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param { import('../player').default } player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param { import('../tech/tech').default } tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param { import('../player').default } player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayHandler = e => this.updateDisplay(e);\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', e => this.preselectTrack(e));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  { import('./player').default } player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param { import('../player').default } player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      const isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param { import('../../component').default } self\n *        The component that should be hidden if volume is unsupported\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param { import('../../component').default } self\n *        A reference to the mute toggle button\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return { import('../../menu/menu').default }\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  { import('./text-track-menu-item').default[] }\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => this.open(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', '<span class=\"vjs-text-color\">', this.createElSelect_('color', legendId), '</span>', '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text Background'), '</legend>', '<span class=\"vjs-bg-color\">', this.createElSelect_('backgroundColor', legendId), '</span>', '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Caption Area Background'), '</legend>', '<span class=\"vjs-window-color\">', this.createElSelect_('windowColor', legendId), '</span>', '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, Object.values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param { import('./html5').default } tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recomended)\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Function} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s height to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    this.error(error);\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit after all.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        initialAspectRatio: this.videoWidth() / this.videoHeight(),\n        copyStyleSheets: true\n      }).then(pipWindow => {\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.append(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger('enterpictureinpicture');\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('unload', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.replaceWith(pipVideo);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the unload handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return { import('./tracks/html-track-element').default }\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"3.0.0\";\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.mergeOptions({}, options));\n}; // Register the plugin with video.js.\n\nregisterPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.0.2 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  const seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls; // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      const newOptions = beforeRequest(options);\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    const request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$3 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$3,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      char = get708CharFromCode(extended | currentByte);\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push('');\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = '';\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$2 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n  var window$1 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n    getEmsgID3: getEmsgID3\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = captions => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: message => {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(merge(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  for (let i = 0; i < cues.length; i++) {\n    const duplicates = [];\n    let occurrences = 0;\n    for (let j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n    if (duplicates.length) {\n      duplicates.forEach(dupe => track.removeCue(dupe));\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset,\n      videoDuration: this.duration_()\n    });\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n    sourceBuffer.changeType(mime);\n    sourceUpdater.codecs[type] = codec;\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const timestampmap = segmentInfo.timestampmap;\n    const diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings;\n    stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    stopLoaders(segmentLoader, mediaType);\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 60 * 2;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, this.requestOptions_) : new PlaylistLoader(src, this.vhs_, this.requestOptions_);\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist.id || playlist.uri;\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      this.mainSegmentLoader_.load();\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(() => {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        this.tech_.setCurrentTime(this.tech_.currentTime() + 0.04);\n      } else {\n        this.tech_.setCurrentTime(this.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n    if (!media.endList) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', () => {\n          this.trigger('firstplay');\n          this.tech_.setCurrentTime(seekable.end(0));\n          this.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.0.2\";\nvar version$3 = \"6.3.0\";\nvar version$2 = \"1.0.1\";\nvar version$1 = \"6.0.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  setOptions_() {\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 5 * 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n      const mainPlaylist = this.playlistController_.main();\n      if (!mainPlaylist || !mainPlaylist.playlists) {\n        return;\n      }\n      const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      mainPlaylist.playlists.forEach(playlist => {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n      if (excludedHDPlaylists.length) {\n        videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n        this.playlistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","<template>\r\n    <div class=\"flex flex-col lg:flex-row\">\r\n        <div id=\"danmuList\" class=\"bg-black relative overflow-hidden rounded-lg flex-grow w-full h-[38rem] flex justify-center items-center max-h-[38rem]\">\r\n            \r\n            <video :class=\"LiveStart? 'hidden':'hidden'\" ref=\"videoElement\" class=\"video-js w-full h-ful relative\" :style=\"videoStyle\"></video>\r\n            <div @contextmenu.prevent @mousedown.prevent @mouseup.prevent @dblclick=\"TogglePlayer\" class=\"z-30 absolute w-full h-full top-0 left-0 flex flex-col justify-between items-center\">\r\n                <div></div>\r\n                <div>\r\n                    <div v-if=\"!LiveOpen && LiveStart\" class=\"mb-4 flex flex-col justify-center items-center\">\r\n                        <img src=\"@/assets/images/unstart.png\" class=\"w-20 h-auto\" alt=\"\">\r\n                        <div class=\"text-xl text-white mt-2\">直播被你暂停了(ノへ￣、)</div>\r\n                    </div>\r\n                    <LiveStop v-if=\"!LiveStart\" />\r\n                </div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border flex flex-col justify-between p-3 bg-white bg-opacity-95 rounded-lg w-80 mt-8 lg:mt-0 ml-8 max-h-[38rem]\">\r\n            <div>\r\n                <div class=\"flex justify-between\">\r\n                    <div class=\"text-xs font-medium text-pink-500\">聊天室(*/ω＼*)</div>\r\n                    <div class=\"text-xs font-medium text-black\">当前在线: {{ Count }}人</div>\r\n                </div>\r\n                <!--  -->\r\n                <div id=\"LIVEmsgList\" class=\"mt-2 max-h-[28rem] overflow-y-auto\">\r\n                    <div class=\"text-gray-700 text-sm my-0.5\"><span class=\"text-gray-400\"><img class=\"h-[0.875rem] mb-[0.34rem] rounded-sm inline\" src=\"@/assets/images/master.png\">白澪</span>: 欢迎来到直播间(ᗜ ˰ ᗜ)</div>\r\n                    \r\n                </div>\r\n                <!--  -->\r\n            </div>            \r\n            <div class=\"flex flex-col\">\r\n                <textarea @keydown=\"handleKeyDown\" v-model=\"LiveMsg\" type=\"text\" maxlength=\"40\" class=\"resize-none w-full h-16 p-2 outline-0 ring-0 border rounded-md\" placeholder=\"发条弹幕吧~\" name=\"\" id=\"\" />\r\n                <div class=\"w-full flex mt-2 justify-end\">\r\n                    <button @click=\"SendLiveMsg\" class=\"w-20 h-7 text-white text-sm font-medium rounded-lg bg-pink-500 hover:bg-pink-700 active:bg-pink-600\">发送</button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport LiveStop from '@/components/LiveCom/LiveStop.vue'\r\n\r\nimport { sendMsg } from '@/components/LiveCom/sendMsg'\r\nimport { sendError } from '@/components/LiveCom/sendError'\r\nimport { sendDanmu } from '@/components/LiveCom/sendDanmu'\r\nimport { gSendMsg } from '@/components/gSendMsg'\r\nimport axios from 'axios';\r\nimport { onMounted,onBeforeUnmount,ref } from 'vue';\r\nimport videojs from 'video.js';\r\nimport 'video.js/dist/video-js.css';\r\n\r\nconst LiveStart = ref(true);\r\nconst LiveOpen = ref(true);\r\n\r\nconst player = ref(null);\r\nconst videoElement = ref(null);\r\nonMounted(() => {\r\n    player.value = videojs(videoElement.value, {\r\n        controls: false,\r\n        autoplay: true,\r\n        controlBar: false,\r\n        sources: [{\r\n            src: 'http://live.miochyan.net/live/chyantest.m3u8',\r\n            type: 'application/x-mpegURL'\r\n        }]\r\n    });\r\n    player.value.on('playing', () => {\r\n        LiveOpen.value = true;\r\n    })\r\n    player.value.on('loadedmetadata', () => {\r\n        LiveStart.value = true;\r\n    });\r\n\r\n    player.value.on('error', () => {\r\n        LiveStart.value = false;\r\n    });\r\n\r\n\r\n});\r\n\r\n\r\n\r\nfunction TogglePlayer() {\r\n    if (LiveStart.value) {\r\n        if (LiveOpen.value == false){\r\n            player.value.play();\r\n            LiveOpen.value = true;\r\n        }else {\r\n            player.value.pause();\r\n            LiveOpen.value = false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n  // 销毁播放器\r\nonBeforeUnmount(() => {\r\n    player.value.dispose();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// WS\r\nconst Count = ref(0);\r\nconst LiveMsg = ref();\r\n\r\nonMounted(() => {\r\n\r\n\r\n// 创建 WebSocket 实例，参数为 WebSocket 服务器的 URL\r\nconst socket = new WebSocket('wss://api.miochyan.net/live/websockt/ws');\r\n\r\n// 当连接建立时触发\r\nsocket.onopen = function() {\r\n    console.log('WebSocket 连接已建立');\r\n    setInterval(ping(socket),1000)\r\n};\r\n\r\n// 当收到服务端发送的消息时触发\r\nsocket.onmessage = function(event) {\r\n    console.log('收到消息:', event.data);\r\n    // const WsData = JSON.parse(event.data);\r\n    const WsData = eval('(' + event.data + ')');\r\n    if (WsData[\"type\"] === \"send\") {\r\n        sendMsg(\"LIVEmsgList\",WsData)\r\n        sendDanmu(\"danmuList\",WsData[\"send\"])\r\n\r\n    }\r\n    if (WsData[\"type\"] === \"count\") {\r\n        Count.value = WsData[\"count\"]\r\n    }\r\n};\r\n\r\n// 当连接关闭时触发\r\nsocket.onclose = function(event) {\r\n    sendError(\"LIVEmsgList\",\"WebSocket 连接已关闭\",`#${event.code}:${event.reason}`)\r\n};\r\n\r\n// 当发生错误时触发\r\nsocket.onerror = function(error) {\r\n    sendError(\"LIVEmsgList\",\"WebSocket 错误\",error)\r\n};\r\n\r\n})\r\n\r\n\r\nfunction handleKeyDown(event) {\r\n    if (event.ctrlKey && event.key === 'Enter') {\r\n        SendLiveMsg();\r\n    }\r\n}\r\n\r\nconst token = localStorage.getItem(\"UIMToken\");\r\nLiveMsg.value = \"\"\r\nfunction SendLiveMsg() {\r\n    axios.post(\r\n    \"https://api.miochyan.net/live/websockt/send\", \r\n    {\r\n        \"msg\": LiveMsg.value\r\n    },\r\n    {\r\n        headers: {\r\n            Authorization: `UIMAC ${token}`\r\n        }\r\n    }\r\n).then(() => {\r\n    LiveMsg.value = \"\"\r\n})\r\n    .catch(() => {\r\n        gSendMsg(\"linMsgList\",\"error\",\"你还没有登录鸭(ᗜ ˰ ᗜ)\",3000)\r\n    });\r\n}\r\n\r\n\r\nfunction ping(ws) {\r\n    ws.send(\"ping\")\r\n}\r\n</script>","<template>\r\n    <div class=\"mb-4 flex flex-col justify-center items-center\">\r\n        <img src=\"@/assets/images/stop.png\" class=\"w-20 h-auto\" alt=\"\">\r\n        <div class=\"text-xl text-white mt-2\">少女祈祷中@#~(停播去乞讨拉)</div>\r\n    </div>\r\n\r\n</template>","import { render } from \"./LiveStop.vue?vue&type=template&id=c38cecc0\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./MainView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MainView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n            <header\r\n                class=\" fixed z-30 select-none my-6 bg-white bg-opacity-95 p-2.5 rounded-xl w-[calc(100vw-2rem)] sm:w-[calc(100vw-4rem)] xlw h-16 border shadow-sm flex justify-between items-center\">\r\n                <div class=\"navbar-start flex\">\r\n                    <a href=\"https://seiya.mio.ski/dash\"\r\n                        class=\"rounded-lg transition-all duration-75 ease-linear active:scale-95 px-2 hover:bg-gray-300 h-12 normal-case text-xl flex items-center\">\r\n                        <!-- <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" class=\"mr-2 hidden sm:flex\" viewBox=\"0 0 16 16\">\r\n                            <path fill-rule=\"evenodd\" d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n                        </svg> -->\r\n                        <img src=\"@/assets/images/lolilin.png\" class=\"w-10\" alt=\"\">\r\n                        <div class=\"flex flex-col sm:flex-row\">\r\n                            <div class=\" title font-semibold ml-2 text-xl sm:text-2xl pt-1 font-[Magic]\">白澪Official Live</div>\r\n                        </div>\r\n                    </a>\r\n\r\n\r\n                </div>\r\n                <div class=\"navbar-end flex\">\r\n                    <!-- <button\r\n                        class=\"transition-all duration-75 ease-linear p-1.5 w-12 h-12 active:scale-95 rounded-full hover:bg-gray-300 flex items-center justify-center\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-300\" fill=\"none\"\r\n                            viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                        </svg>\r\n                    </button> -->\r\n                    <button class=\"relative\">\r\n                        <div\r\n                            class=\"indicator transition-all duration-75 ease-linear p-1.5 w-12 h-12 active:scale-95 rounded-full hover:bg-gray-300 flex items-center justify-center\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                                    d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n                            </svg>\r\n                            <span class=\"indicator-item badge badge-xs\"></span>\r\n                        </div>\r\n\r\n                        <div id=\"linMsgList\" class=\"z-20 absolute top-16 right-[-3.66rem]\">\r\n\r\n                        </div>\r\n\r\n                    </button>\r\n                    <button class=\"relative group groupss w-12 h-12 rounded-full  flex items-center justify-center\">\r\n                        <img class=\"rounded-full z-20 group-hover:w-12 group-hover:h-12 w-9 h-9 transition-all duration-200 ease-linear\"\r\n                            :src=\"avatar\" alt=\"\">\r\n                        <div v-if=\"LoginTrue\"\r\n                            class=\"animation-element absolute w-72 right-5 top-[-0.8rem] z-10 transition-all duration-200 ease-linear\">\r\n                            <div class=\"rounded-md py-1 bg-opacity-95 bg-white border select-none shadow-sm\">\r\n                                <div class=\"px-6 h-16 flex w-full items-center\">\r\n                                    <div class=\"flex flex-col items-start\">\r\n                                        <div class=\"flex items-center\">\r\n                                            <div class=\"text-lg font-sans font-semibold mr-1\" v-html=\"nickname\"></div>\r\n                                            <div v-html=\"GenderIconList[gender]\"></div>\r\n                                        </div>\r\n                                        <div class=\"text-sm flex font-light text-gray-400\">@{{ username }}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div class=\"my-1 border-t\"></div>\r\n                                <div class=\"text-xs font-semibold flex justify-start text-gray-400 px-3 py-1\">{{ $t(\"main.view.dash.header.menu.sub.archive\") }}</div>\r\n                                <div class=\"px-1\">\r\n                                    <a href=\"https://seiya.mio.ski/dash\"\r\n                                        class=\"active:scale-95 transition-all duration-75 ease-linear py-1 px-2 hover:bg-slate-100 items-center cursor-pointer rounded-sm flex justify-between\">\r\n                                        <div class=\"ml-1 flex text-[0.9rem] justify-center\">\r\n                                            <div class=\"w-6 mr-2 flex items-center\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                    fill=\"currentColor\" class=\"ml-1\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 12.5V5a1 1 0 0 1-1-1V2zm2 3v7.5A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5V5H2zm13-3H1v2h14V2zM5 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div class=\"mt-0.5\">{{ $t(\"main.view.dash.header.menu.dashboard\") }}</div>\r\n\r\n                                        </div>\r\n                                        <div class=\"text-gray-500 text-sm font-medium mr-3\"></div>\r\n                                    </a>\r\n                                    <a href=\"https://seiya.mio.ski/setting/linAvatar\"\r\n                                        class=\"active:scale-95 transition-all duration-75 ease-linear py-1 px-2 hover:bg-slate-100 items-center cursor-pointer rounded-sm flex justify-between\">\r\n                                        <div class=\"ml-1 flex text-[0.9rem]\">\r\n                                            <div class=\"w-6 mr-2 flex items-center\">\r\n                                                <svg t=\"1690480132857\" class=\"w-6\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1585\">\r\n                                                    <path\r\n                                                        d=\"M826.88 123.68c4.52-4 11.24-8.64 16.6-2.8 4.56 3.8 2.96 10.48 4.52 15.6 3.2 55.88 6.64 111.72 10.04 167.56 0.6 27.32 5.4 54.48 3.76 81.84-8.88 2.72-16.36-3-23.8-6.88-61.96-31.84-123.88-63.8-185.8-95.68-5.24-2.12-8.32-6.96-11.08-11.6 3.84-3.88 7.72-7.8 12.04-11.2 57.96-45.52 115.84-91.2 173.72-136.84zM179.16 161.16c2.24-13.2 1.16-27.24 7.56-39.4 7.64-0.04 13.48 4.92 19.28 9.16 51.84 38.76 103.8 77.4 155.8 116 5.8 4.72 14.56 8.4 13.08 17.48-7.24 6-16.36 8.88-24.8 12.72-52.76 23.52-105.64 46.8-158.36 70.32-9.56 3.96-19.36 11.2-30.04 6.44 4.76-64.32 12.28-128.44 17.48-192.72zM348.2 487.8c20.16-18.88 36.88-41.76 59.36-57.96 15.84 11.68 28.04 27.32 40.56 42.32-19.16 18.76-38.24 37.56-57.96 55.72 19.48 16.8 36.32 36.48 56.72 52.16-6 16.32-22.52 25-34.64 36.32-3.96 4.96-11.44 4.12-15.36-0.36-16.44-15.68-32.56-31.72-48.8-47.52-18.56 17.88-36.8 36.08-55.64 53.68-12-13.36-26.6-23.96-39.16-36.76 18.92-17.96 36.88-37 54.24-56.48-21.44-19.48-42.36-39.6-62.52-60.44 14.36-13.16 25.52-30.64 43.4-39.28 20.2 19.24 39.64 39.32 59.8 58.6zM584.72 432.08c4.64-5.16 13.2-3.64 16.84 2.04 16.6 18.24 33.24 36.44 50.48 54.08 19.96-17.96 37.72-39.44 59.88-54.32 17.56 8.4 27.68 28.04 40.64 42.4-18.96 17.88-38.76 34.76-58.36 51.84-0.08 0.96-0.2 2.84-0.24 3.8 18 16.6 33.24 35.92 51.92 51.8l0.16 5.2c-11.24 12.72-25.28 22.56-38.56 32.96-1.88 0.08-5.56 0.2-7.4 0.24-18.28-16.76-34.08-36.08-51.88-53.32-18.28 17.68-38.36 33.36-56.52 51.2-12.92-12.28-24.76-25.72-38.68-36.96 18.56-18.72 38.08-36.48 57.04-54.8-20.56-20.8-40.72-42.12-60.52-63.64 12.12-10.4 23.12-22.04 35.2-32.52zM365.28 719.68c4.64-5.36 11.08-8.92 18.36-8.16 82.8-0.32 165.6-0.2 248.4-0.76 6.64-0.92 12.6 1.96 18.36 4.8-1.12 5.88-2.92 11.72-6.8 16.48-41.8 56.76-83.16 113.88-125.04 170.6-2.24 4.76-10.6 5.68-13.12 0.72-43.48-55.6-86.16-111.8-129.56-167.44-4.08-5.04-7.44-10.6-10.6-16.24m154.04 49.88c0.2 35.8-0.24 71.64-0.16 107.44 26.44-36.04 52.76-72.16 79.24-108.2-26.36 0.48-52.72-0.08-79.08 0.76zM203.68 742.28c34-3.68 67.72-9.6 101.8-12.36 0.76 10.64 2 21.32 5.32 31.56-3.04 2.68-6.52 4.24-10.48 4.6-35.24 4.08-70.4 8.76-105.64 12.32-4.56-9.92-5.16-20.88-6.36-31.52 4.8-2.48 9.92-4.4 15.36-4.6zM716.68 751.48c13.2-2.96 26-7.52 39.16-10.76 24.56 12.12 48.96 25.12 72.44 39.28l1.76 4.36c-5.44 9.2-12 17.92-19.76 25.28-4.12 3.44-9.76 0.16-13.68-1.96-21.44-13.44-43.08-26.6-64.76-39.6-6.36-4.2-15.76-7.36-15.16-16.6zM303.36 802.52c6.04-4.44 11.88-12.48 20.36-9.16 6.44 4.8 10.24 12.08 14.6 18.64-29.6 28.76-60.92 55.8-91.16 83.96-6.12 6.8-12.84-1.72-17.52-5.6-5.64-4.64-13.48-12.96-6.36-19.84 26.48-22.92 53.56-45.12 80.08-68zM679.88 798.4c6.44-3.32 12 1.44 17.04 4.88 30.28 20.4 60.92 40.32 91.12 60.84 4.56 2.6 7.44 7 10.04 11.44-8.76 12.92-16.52 26.52-25.68 39.2-10.04-1.48-15.2-10.96-21.6-17.72-24.4-27.68-48.84-55.36-73.12-83.12-5.56-4.2-4.92-13.44 2.2-15.52z\"\r\n                                                        p-id=\"1586\"></path>\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div class=\"mt-0.5\">{{ $t(\"main.view.dash.header.menu.linAvatar\") }}</div>\r\n                                        </div>\r\n                                        <div class=\"text-gray-500 text-sm font-medium mr-3\"></div>\r\n                                    </a>\r\n                                    <a href=\"https://seiya.mio.ski/vip\"\r\n                                        class=\"active:scale-95 transition-all duration-75 ease-linear py-1 px-2 hover:bg-slate-100 items-center cursor-pointer rounded-sm flex justify-between\">\r\n                                        <div class=\"ml-1 flex text-[0.9rem]\">\r\n                                            <div class=\"w-6 mr-2 flex items-center\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                    fill=\"currentColor\" class=\"ml-1\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\r\n                                                    <path\r\n                                                        d=\"M6.854 4.646a.5.5 0 0 1 0 .708L4.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0zm2.292 0a.5.5 0 0 0 0 .708L11.793 8l-2.647 2.646a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708 0z\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div class=\"mt-0.5\">{{ $t(\"main.view.dash.header.menu.vip\") }}</div>\r\n                                        </div>\r\n                                        <div class=\"text-gray-500 text-sm font-medium mr-3\"></div>\r\n                                    </a>\r\n                                </div>\r\n                                <div class=\"text-xs font-semibold flex justify-start text-gray-400 px-3 py-1\">{{ $t(\"main.view.dash.header.menu.sub.secure\") }}</div>\r\n                                <div class=\"px-1\">\r\n                                    <a href=\"https://seiya.mio.ski/secure\"\r\n                                        class=\"active:scale-95 transition-all duration-75 ease-linear py-1 px-2 hover:bg-slate-100 items-center cursor-pointer rounded-sm flex justify-between\">\r\n                                        <div class=\"ml-1 flex text-[0.9rem] justify-center\">\r\n                                            <div class=\"w-6 mr-2 flex items-center\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                    fill=\"currentColor\" class=\"ml-1\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M5.338 1.59a61.44 61.44 0 0 0-2.837.856.481.481 0 0 0-.328.39c-.554 4.157.726 7.19 2.253 9.188a10.725 10.725 0 0 0 2.287 2.233c.346.244.652.42.893.533.12.057.218.095.293.118a.55.55 0 0 0 .101.025.615.615 0 0 0 .1-.025c.076-.023.174-.061.294-.118.24-.113.547-.29.893-.533a10.726 10.726 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067c-.53 0-1.552.223-2.662.524zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.775 11.775 0 0 1-2.517 2.453 7.159 7.159 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7.158 7.158 0 0 1-1.048-.625 11.777 11.777 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 62.456 62.456 0 0 1 5.072.56z\" />\r\n                                                    <path\r\n                                                        d=\"M10.854 5.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 7.793l2.646-2.647a.5.5 0 0 1 .708 0z\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div class=\"mt-0.5\">{{ $t(\"main.view.dash.header.menu.secure\") }}</div>\r\n\r\n                                        </div>\r\n                                        <div class=\"text-gray-500 text-sm font-medium mr-3\"></div>\r\n                                    </a>\r\n                                    <a href=\"https://seiya.mio.ski/secure/terminal\"\r\n                                        class=\"active:scale-95 transition-all duration-75 ease-linear py-1 px-2 hover:bg-slate-100 items-center cursor-pointer rounded-sm flex justify-between\">\r\n                                        <div class=\"ml-1 flex text-[0.9rem]\">\r\n                                            <div class=\"w-6 mr-2 flex items-center\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                    fill=\"currentColor\" class=\"ml-1\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M6 9a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3A.5.5 0 0 1 6 9zM3.854 4.146a.5.5 0 1 0-.708.708L4.793 6.5 3.146 8.146a.5.5 0 1 0 .708.708l2-2a.5.5 0 0 0 0-.708l-2-2z\" />\r\n                                                    <path\r\n                                                        d=\"M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2zm12 1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h12z\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div class=\"mt-0.5\">{{ $t(\"main.view.dash.header.menu.terminal\") }}</div>\r\n\r\n                                        </div>\r\n                                        <div class=\"text-gray-500 text-sm font-medium mr-3\"></div>\r\n                                    </a>\r\n                                </div> -->\r\n                                <!-- <div class=\"my-1 border-t\"></div>\r\n                                <div class=\"px-1\">\r\n                                    <a href=\"https://seiya.mio.ski/setting/profile\"\r\n                                        class=\"active:scale-95 transition-all duration-75 ease-linear py-1 px-2 hover:bg-slate-100 items-center cursor-pointer rounded-sm flex justify-between\">\r\n                                        <div class=\"ml-1 flex text-[0.9rem]\">\r\n                                            <div class=\"w-6 mr-2 flex items-center\">\r\n                                                <svg t=\"1690541805901\" class=\"w-4\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4386\">\r\n                                                    <path\r\n                                                        d=\"M979.52953384 636.2602336l-73.41605545-62.76490615a402.86174806 402.86174806 0 0 0 5.27122536-64.78041321c0-21.74102172-1.79549069-43.4899012-5.27122536-64.78434205l73.41605545-62.76359654c11.31774649-9.63619288 15.46531688-25.32676461 10.41934635-39.45233899l-1.0070987-2.91128796c-20.28603257-56.59659025-50.3208854-108.60295816-89.3227147-154.55625685l-2.01943593-2.3533893a36.0027967 36.0027967 0 0 0-39.34364041-10.64853006l-91.11689576 32.39217105c-33.6245246-27.57014574-71.1713647-49.31509633-111.73819131-64.55384874l-17.59999947-95.26708539c-2.68734273-14.68347303-14.23427293-26.11515656-28.91643635-28.80773777l-3.02784423-0.55789865c-58.39339055-10.53459303-119.80938685-10.53459303-178.20277744 0l-3.02522498 0.55789865c-14.68478263 2.69258121-26.22647437 14.12426477-28.91905557 28.80773777l-17.70607878 95.71497583c-40.23680208 15.24137165-77.56100659 36.8671467-110.96027633 64.3299035l-91.79004107-32.61611625c-14.01032771-4.93072386-29.70220907-0.78184385-39.33709233 10.64853006l-2.02074551 2.3533893c-39.00444854 46.06199724-69.04192062 98.06836515-89.32402433 154.55625685l-1.00971794 2.91128796c-5.04204166 14.00901808-0.89970978 29.70613794 10.42327521 39.45233899l74.3065979 63.43805146c-3.47442509 21.06918605-5.15728833 42.58626253-5.15728836 63.99464047 0 21.52100535 1.68286324 43.03808184 5.15728836 63.99725971l-74.3065979 63.43674185c-11.32298499 9.6388121-15.46531688 25.32807424-10.42327521 39.45102934l1.00971794 2.91521685c20.2821037 56.48789171 50.31957578 108.60295816 89.32402433 154.55625681l2.02074551 2.35338931a35.99755824 35.99755824 0 0 0 39.33709233 10.6498397l91.79004107-32.61742587c33.39796012 27.46144715 70.72216464 49.20377851 110.96027633 64.33645159l17.70607878 95.71497585c2.69258121 14.68347303 14.23427293 26.11384697 28.91905557 28.80118965l3.02522498 0.55920826a503.64102911 503.64102911 0 0 0 89.10269835 7.96249697c29.92615429 0 59.96362637-2.69389082 89.10007909-7.96249697l3.02784423-0.55920826c14.68216338-2.68734273 26.22909363-14.11771667 28.91643635-28.80118965l17.59999947-95.26577577c40.56813625-15.24922938 78.11366675-36.87369481 111.73819131-64.56039683l91.11689576 32.39217103c14.01032771 4.93072386 29.70613794 0.78184385 39.34364041-10.6498397l2.01943593-2.35338931c39.00182927-46.06330684 69.03668213-98.06836515 89.3227147-154.55625681l1.0070987-2.91521685c5.04597053-13.78114399 0.89840015-29.47171573-10.41934635-39.22446488zM826.54482245 457.16036566a317.23478443 317.23478443 0 0 1 4.25626895 51.66717602c0 17.37736386-1.45498917 34.74425073-4.25626895 51.66455675l-7.39935983 44.94619999 83.72015514 71.62056478c-12.66272751 29.25038974-28.68856225 56.82446435-47.74355085 82.48780158l-104.00487809-36.87369479-35.19476044 28.91774594c-26.78830188 21.96496695-56.60444798 39.22708414-88.87875309 51.33191299l-42.70281882 16.02321549-20.06208734 108.71820486c-31.49508051 3.58443326-63.6567582 3.58443326-95.268395 0l-20.05946809-108.94215007-42.36493656-16.24847036c-31.94297095-12.10613848-61.64125116-29.36563641-88.2056078-51.2219048l-35.18821234-29.02775415-104.6858811 37.20764823c-19.05105975-25.66595651-34.96950557-53.34611039-47.74224124-82.48518237l84.61593606-72.28847159-7.28280356-44.82964368c-2.69258121-16.70421855-4.14757038-33.96502609-4.14757037-50.99926918 0-17.14687051 1.34498098-34.29897953 4.14757037-50.99534035l7.28280356-44.82964367-84.61593606-72.29240047c12.6640371-29.25038974 28.6911815-56.8218451 47.74224124-82.4878016l104.6858811 37.20764821 35.18821234-29.02775413c26.56435663-21.85626838 56.26263684-39.11707594 88.2056078-51.2166663l42.48018322-16.03107325 20.05946812-108.94084045c31.49639013-3.58574288 63.65806782-3.58574288 95.26708534 0l20.06339698 108.71820485 42.70150918 16.02976361c32.16167768 12.09959037 62.09176084 29.36039792 88.87351461 51.32536488l35.19476042 28.91905557 104.00618773-36.87369481c19.05629825 25.66595651 34.97081521 53.35265851 47.74878935 82.49304007l-83.72670325 71.6140167 7.29066127 44.7196355z m0 0\"\r\n                                                        fill=\"#2c2c2c\" p-id=\"4387\"></path>\r\n                                                    <path\r\n                                                        d=\"M516.86917167 300.35941806c-108.9382212 0-197.25383718 88.32216409-197.25383718 197.25907567 0 108.94215005 88.31561599 197.25776602 197.25383718 197.25776604 108.94215005 0 197.25645642-88.31692561 197.25645642-197.25776604 0-108.93691157-88.31561599-197.25907566-197.25645642-197.25907567z m88.76481607 286.02389173c-23.75783837 23.65306869-55.25160926 36.76499625-88.76481607 36.76499626-33.50927793 0-65.00435842-13.11323718-88.76612568-36.76499626-23.64913982-23.75652877-36.75844814-55.25029966-36.75844815-88.76481606 0-33.50665868 13.10930834-65.00435842 36.75844815-88.76481606 23.76176725-23.76176725 55.25684776-36.75844814 88.76612568-36.75844816 33.51320678 0 65.00828729 12.99668091 88.76481607 36.75844816 23.65175908 23.76176725 36.76237701 55.25815737 36.76237701 88.76481606 0 33.51451641-13.11061794 65.00828729-36.76237701 88.76481606z m0 0\"\r\n                                                        fill=\"#2c2c2c\" p-id=\"4388\"></path>\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div class=\"mt-0.5\">{{ $t(\"main.view.dash.header.menu.setting\") }}</div>\r\n                                        </div>\r\n                                        <div class=\"text-gray-500 text-sm font-medium mr-3\">Ctrl + S</div>\r\n                                    </a>\r\n                                    <div @click=\"logOut\"\r\n                                        class=\"active:scale-95 transition-all duration-75 ease-linear py-1 px-2 hover:bg-slate-100 items-center cursor-pointer rounded-sm flex justify-between\">\r\n                                        <div class=\"ml-1 flex text-[0.9rem]\">\r\n                                            <div class=\"w-6 mr-2 flex items-center\">\r\n                                                <svg t=\"1690542021860\" class=\"w-5\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5366\">\r\n                                                    <path\r\n                                                        d=\"M128 213.333333c0-46.933333 38.4-85.333333 85.333333-85.333333h341.333334v85.333333H213.333333v597.333334h341.333334v85.333333H213.333333c-46.933333 0-85.333333-38.4-85.333333-85.333333V213.333333z m604.842667 256L624.64 361.130667l60.330667-60.330667 211.2 211.2-211.2 211.2-60.330667-60.330667L732.842667 554.666667H451.84v-85.333334h281.002667z\"\r\n                                                        fill=\"#000000\" p-id=\"5367\"></path>\r\n                                                </svg>\r\n                                            </div>\r\n                                            <div class=\"mt-0.5\">{{ $t(\"main.view.dash.header.menu.logout\") }}</div>\r\n                                        </div>\r\n                                        <div class=\"text-gray-500 text-sm font-medium mr-3\"></div>\r\n                                    </div>\r\n                                </div> -->\r\n                            </div>\r\n                        </div>\r\n                        <div @click=\"login\" v-if=\"!LoginTrue\"\r\n                        class=\"animation-element absolute w-72 right-5 top-[-0.8rem] z-10 transition-all duration-200 ease-linear\">\r\n                        <div class=\"rounded-md py-1 bg-opacity-95 bg-white dark:bg-black border dark:border-gray-800 select-none shadow-sm\">\r\n                            <div class=\"px-6 h-16 flex w-full items-center\">\r\n                                <div class=\"text-lg font-sans font-semibold mr-1\">Login UIMAC -></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { MD5 } from 'crypto-js';\r\nimport { onBeforeRouteUpdate } from 'vue-router'\r\n\r\n\r\nfunction logOut() {\r\n    location.href = \"https://seiya.mio.ski/logout?redirect_uri=\" + location.href\r\n}\r\n\r\nconst route = useRoute();\r\n\r\n\r\nconst metaTitle = ref(route.meta.title);\r\n\r\nonBeforeRouteUpdate((to, from, next) => {\r\n    metaTitle.value = to.meta.title;\r\n    next()\r\n})\r\n// const childMetaInfo = router.matched[0].meta; // 获取子组件的meta信息\r\nconst LoginTrue = ref(false);\r\n\r\nconst uid = ref(null);\r\nconst avatar = ref(\"https://s1.lolis.fyi/seiya/avatar/default.webp\");\r\nconst nickname = ref(\"\");\r\nconst username = ref(\"\");\r\nconst sign = ref(\"\");\r\nconst gender = ref(\"\");\r\n\r\n\r\nconst GenderIconList = {\r\n    \"0\": '<div class=\"w-[1.2rem] h-[1.2rem] mb-0.5 p-0.5 mx-1 border bg-pink-400 rounded-full flex justify-center items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\"width=\"16\"height=\"16\"fill=\"#fff\"viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\"d=\"M8 1a4 4 0 1 0 0 8 4 4 0 0 0 0-8zM3 5a5 5 0 1 1 5.5 4.975V12h2a.5.5 0 0 1 0 1h-2v2.5a.5.5 0 0 1-1 0V13h-2a.5.5 0 0 1 0-1h2V9.975A5 5 0 0 1 3 5z\"/></svg></div>',\r\n    \"1\": '<div class=\"w-[1.2rem] h-[1.2rem] mb-0.5 p-0.5 mx-1 border bg-blue-400 rounded-full flex justify-center items-center\"><svg xmlns=\"http://www.w3.org/2000/svg\"width=\"16\"height=\"16\"fill=\"#fff\"viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\"d=\"M9.5 2a.5.5 0 0 1 0-1h5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V2.707L9.871 6.836a5 5 0 1 1-.707-.707L13.293 2H9.5zM6 6a4 4 0 1 0 0 8 4 4 0 0 0 0-8z\"/></svg></div>'\r\n}\r\n\r\n\r\nconst token = localStorage.getItem(\"UIMToken\");\r\nfunction ApiReload() {\r\n    axios.post(\r\n    \"https://api.mioseiya.com/app/account/web/get/info\", null,\r\n    {\r\n        headers: {\r\n            Authorization: `UIMAC ${token}`\r\n        }\r\n    }\r\n)\r\n    // eslint-disable-next-line no-unused-vars\r\n    .then(response => {\r\n        // console.log(response.data);\r\n        const ApiData = response.data\r\n        uid.value = ApiData[\"uid\"].toString()\r\n        avatar.value = \"https://s1.lolis.fyi/seiya/avatar/\" + MD5(uid.value).toString()\r\n        // bgimg.value = \"background-image: url(https://s1.lolis.fyi/seiya/banner/\" + MD5(uid.value).toString() + \");\"\r\n        sign.value = ApiData[\"sign\"]\r\n        nickname.value = ApiData[\"nickname\"]\r\n        username.value = ApiData[\"username\"]\r\n        gender.value = ApiData[\"gender\"]\r\n        LoginTrue.value = true;\r\n    })\r\n    // eslint-disable-next-line no-unused-vars\r\n    .catch(error => {\r\n        LoginTrue.value = false;\r\n    });\r\n}\r\nApiReload()\r\n\r\n</script>\r\n\r\n\r\n<style>\r\nbody {\r\n    overflow-x: hidden;\r\n    background: #ffffff;\r\n}\r\n\r\n.title {\r\n    background: linear-gradient(to right, #f59fb8, #f04888);\r\n    /* 渐变颜色 */\r\n    -webkit-background-clip: text;\r\n    /* 将背景剪切为文字区域 */\r\n    -webkit-text-fill-color: transparent;\r\n    /* 文字填充透明 */\r\n    /* font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; */\r\n}\r\n\r\n@media (min-width: 1344px) {\r\n    .xlw {\r\n        width: 80rem\r\n            /* 1120px */\r\n            !important;\r\n    }\r\n}\r\n\r\n.animation-element {\r\n    display: none;\r\n}\r\n\r\n.groupss:hover .animation-element {\r\n    display: block;\r\n    animation: fade-in 400ms ease-in forwards;\r\n    /* 应用动画 */\r\n}\r\n\r\n@keyframes fade-in {\r\n    0% {\r\n        opacity: 0;\r\n        /* 初始透明度为0 */\r\n    }\r\n\r\n    100% {\r\n        opacity: 1;\r\n        /* 最终透明度为1 */\r\n    }\r\n}</style>\r\n","import script from \"./HeaderCom.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HeaderCom.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HeaderCom.vue?vue&type=style&index=0&id=4f312326&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./LiveView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LiveView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LiveView.vue?vue&type=style&index=0&id=c89833d2&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","require","window","httpResponseHandler","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","getCharset","headers","decode","e","String","fromCharCode","apply","Uint8Array","contentTypeHeader","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","_extends","isFunction","createXHR","httpHandler","parseHeaders","forEach","row","index","indexOf","slice","Array","isArray","push","forEachArray","array","iterator","i","length","isEmpty","obj","hasOwnProperty","initParams","uri","options","params","_createXHR","Error","called","body","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","failureResponse","aborted","status","useXDR","method","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName","noop","toUpperCase","find","list","predicate","ac","item","freeze","object","oc","assign","target","source","TypeError","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","locator","buildErrorHandler","errorImpl","domBuilder","DOMHandler","errorHandler","isCallback","Function","build","fn","msg","_locator","cdata","position","node","lineNumber","columnNumber","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","defaultNSMap","xmlns","test","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","xml","normalize","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","arguments","charNode","createCDATASection","createTextNode","skippedEntity","name","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","splitOnASCIIWhitespace","filter","orderedSetReducer","element","toOrderedSet","keys","arrayIncludes","copy","src","dest","p","Class","Super","pt","t","constructor","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","c","charCodeAt","_visitNode","firstChild","nextSibling","Document","ns","_nsMap","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","next","lastChild","hasValidParentNodeType","nodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","hasDoctypeChildThatIsNotChild","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","_appendSingleChild","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","addSerializedAttribute","qualifiedName","attributes","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","n","v","attrs2","_ownerElement","toString","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","end","splitText","newText","newNode","getTextContent","set","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","entityReplacer","a","k","charAt","parseInt","appendText","xt","m","lineEnd","linePattern","exec","lineStart","parseStack","currentNSMap","closeMap","tagStart","match","config","pop","localNSMap","endMatch","endIgnoreCaseMach","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","Math","max","f","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","pos","lastIndexOf","matchs","lastMatch","endDTD","getLocalName","doccy","topLevel","minDoc","document","win","self","string","alert","confirm","prompt","keyCode","searchInput","hasKeyCode","which","charCode","names","search","foundNamedKey","codes","aliases","isEventKey","event","nameOrCode","title","alias","getUint64","parseSidx","view","DataView","buffer","byteOffset","byteLength","flags","subarray","references","referenceId","getUint32","timescale","earliestPresentationTime","firstOffset","referenceCount","getUint16","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","MAX_UINT32","pow","uint8","dv","getBigUint64","Number","MAX_SAFE_INTEGER","SafeParseTuple","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","parts","reverse","DEFAULT_LOCATION","resolveUrl","baseUrl","relativeUrl","href","nativeURL","protocolLess","removeLocation","newUrl","URL","protocol","bind","Stream","listeners","_proto","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","atob","Buffer","from","decodeB64ToUint8Array","b64Text","decodedString","LineStream","super","nextNewline","TAB","parseByterange","byterangeString","attributeSeparator","keyvalue","parseAttributes","ParseStream","customParsers","tagMappers","line","newLines","acc","mapper","mappedLine","concat","newLine","tagType","duration","parseFloat","number","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","expression","customType","dataParser","segment","addTagMapper","mapFn","camelCase","str","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","Parser","lineStream","parseStream","uris","currentMap","currentUri","hasParts","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","daterangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","forced","discontinuity","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","daterange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","setSeconds","getSeconds","attribute","independentSegments","custom","identifier","missing","chunk","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecString","codecs","codecType","details","mediaType","codecsFromDefault","master","audioGroupId","AUDIO","audioGroup","audioType","CODECS","isAudioCodec","isTextCodec","getMimeForCodec","container","browserSupportsCodec","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","countBits","x","countBytes","ceil","isArrayBufferView","ArrayBuffer","isView","isTypedArray","toUint8","bytes","BigInt","BYTE_TABLE","bytesToNumber","Uint16Array","b","_temp","_ref","_ref$signed","signed","_ref$le","total","byte","exponent","abs","numberToBytes","_temp2","_ref2","_ref2$le","byteCount","byteIndex","bytesToString","decodeURIComponent","escape","stringToBytes","stringIsBytes","unescape","encodeURIComponent","concatTypedArrays","_len","buffers","_key","totalLen","tempBuffer","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","aByte","forEachMediaGroup","groups","groupKey","labelKey","mediaProperties","isObject","merge","objects","values","o","flatten","lists","y","findIndexes","union","keyFunction","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","indexRange","resolvedUri","rangeStr","ranges","startRange","endRange","byteRangeToString","parseEndNumber","endNumber","segmentRange","static","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","periodEndWC","segmentCount","availableStart","floor","availableEnd","min","toSegments","startNumber","time","parseByDuration","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","reference","size","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","sort","findPlaylistWithName","getMediaGroupPlaylists","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","findIndex","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","oldMatchingSegment","positionManifestOnTimeline","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","mergedPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","bandwidth","SUBTITLES","formatVttPlaylist","m3u8Attributes","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","firstLabel","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","aspectRatio","easyReader","formatVideoPlaylist","frameRate","videoOnly","audioOnly","vttOnly","addMediaSequenceValues","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","Boolean","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","subs","cc","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","identifierReplacement","format","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","segmentsInfo","toPlaylists","representations","findChildren","getContent","textContent","parseDivisionValue","prev","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","psshNode","parseCaptionServiceMetadata","opt","val","toEventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","accessibility","labelVal","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","periods","priorPeriod","representationInfo","stringToMpdXml","manifestString","parser","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","ID3","getId3Size","returnSize","footerPresent","getId3Offset","normalizePaths","paths","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","desc","dependsOnEsId","ocrEsId","descriptors","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","complete","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","totalLength","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","findH264Nal","findH265Nal","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","isLikelyTypes","isLikelyFn","isLikely","detectContainerForBytes","isLikelyFmp4MediaSegment","version$6","hooks_","hooks","hook","removeHook","hookOnce","original","wrapper","FullscreenApi","prefixed","apiMap","specApi","browserApi","history","LogByTypeFactory","log","level","lvl","levels","lvlRegExp","window$1","info","createLogger$1","logByType","createLogger","subname","all","debug","fname","historyItem","clear","disable","enable","log$1","each","initial","accum","isPlain","merge$1","sources","defineLazyProperty","setter","enumerable","writable","Obj","__proto__","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","isReal","maxTouchPoints","UAD","userAgentData","platform","brands","brand","USER_AGENT","userAgent","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","throwIfWhitespace","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","getOwnPropertyNames","propName","appendContent","innerText","prependTo","hasClass","classToCheck","classList","contains","addClass","classesToAdd","add","removeClass","classesToRemove","toggleClass","classToToggle","className","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","blockTextSelection","focus","unblockTextSelection","getBoundingClientRect","computedStyle","findPosition","offsetParent","left","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","transform","boxTarget","box","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","computedStyleValue","getPropertyValue","Dom","videojs$1","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","createStyleElement","style","setTextContent","styleSheet","cssText","DomData","WeakMap","_initialGuid","_supportsPassive","_guid","newGUID","_cleanUpEvents","elem","has","handlers","removeEventListener","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","supportsPassive","passiveEvents","guid","hash","handlersCopy","addEventListener","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","throttled","debounce","immediate","cancel","debounced","later","Fn","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","largs","targetOrType","typeOrListener","evented","eventBusKey","el_","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","isDisposed","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childFound","compEl","parentOptions","handleAdd","playerOptions","workingChildren","Tech","some","wchild","isTech","buildCSSClass","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","keycode","handleKeyPress","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","timeRangesObj","createTimeRanges$1","defaultImplementation","guide","h","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","previouslyActiveEl_","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","focusableEls","focusableEls_","querySelector","focusIndex","shiftKey","allChildren","querySelectorAll","TrackList","tracks_","addTrack","labelchange_","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","props","host","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","tech_","XHR","loaded_","TextTrack","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","_isScrubbing","scrubbing","setCurrentTime","_seconds","trackListChanges","addWebVttScript_","vtt","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","override","overrideNativeVideoTracks","canPlayType","_type","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","crossorigin","poster","setSrc","loading","alt","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","screenOrientation","orientation","changeOrientationEvent","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","isSourceAudio","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","enableDocumentPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","validOptions","skipTime","getSkipForwardTime","includes","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","getSkipBackwardTime","backward","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","innerHTML","createElFont_","createElControls_","defaultsDescription","setValues","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","updateDom_","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getInnerHTMLDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","head","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","aspectRatio_","width_","height_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","inAllowedEls","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","resolve","play_","isSrcReady","isSafariOrIOS","waitToPlay_","isNativeReplay","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","pipContainer","titleBar","requestWindow","initialAspectRatio","copyStyleSheets","pipWindow","pipVideo","replaceWith","hotkeys","excludeElement","isContentEditable","allowedInputTypes","excludedTags","activeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","retry","stopListeningForErrors","sourceTech","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","isAudio_","enableAudioOnlyUI_","playerChildren","controlBarHeight","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","audioOnlyModePromise","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","safeParseTuple","childName","previousLogLevel_","newRates","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","deprecate","warned","deprecateForMajor","oldName","newName","usingPlugin","hasPlugin","normalizeId","videojs","getPlayer","defaultView","PlayerComponent","getPlayers","nId","getAllPlayers","writeable","mergeOptions","addLanguage","EventTarget","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","version$5","initPlugin$1","originalPluginFn","qualityLevels","qualityLevelList","_resolveUrl","resolveManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","createPlaylistID","groupID","parseManifest","onwarn","oninfo","customTagParsers","customTagMappers","llhls","customParser","setupMediaPlaylist","playlistErrors_","setupMediaPlaylists","resolveMediaGroupUris","mainForMedia","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","EventTarget$1","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","updateSegment","skipped","updateSegments","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","vhs_","vhsOptions","handleMediaupdatetimeout_","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","xhrMethod","originalAbort","byterangeStr","byterangeEnd","byterangeStart","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","step","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","playlistId","parseMainXml","mainXml","srcUrl","removeOldMediaGroupLabels","newMain","updateMain","oldMain","noChanges","playlistUpdate","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","filterChangedSidxMappings","videoSidx","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","mediaRequest_","fin","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","location","mpl","mup","createMUPTimeout_","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","stringToArrayBuffer","browserWorkerPolyFill","workerObj","createObjectURL","Blob","blob","BlobBuilder","getBlob","factory","objectUrl","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","getUint64$3","numbers","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","dts","pts","keyFrame","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","generateSampleTable$1","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils$1","generateSampleTable","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","arr","silence_1","coneOfSilence","ONE_SECOND_IN_TS$4","clock$2","clock$1","sumFrameByteLengths","currentObj","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","silentFrame","firstFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","audioFrameUtils$1","ONE_SECOND_IN_TS$3","collectDtsInfo","timelineStartInfo","maxSegmentPts","maxSegmentDts","clearDtsInfo","calculateTrackBaseMediaDecodeTime","scale","trackDecodeInfo$1","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","userIdentifier","parseUserData","sei","parseCaptionPackets","userData","ccData","discardEmulationPreventionBytes$1","emulationPreventionBytesPositions","captionPacketParser","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","get708CharFromCode","newCode","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover$1","direction","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArrayIndexOf$1","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","Iso88591","Utf16","Utf16be","Utf8","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","LINK_MIME_TYPE","pictureType","pictureData","owner","privateData","parseId3Frames$1","frameSize","frameHeader","frameStart","tagSize","hasExtendedHeader","parseId3","parseId3Frames","parseSyncSafeInteger","Stream$5","StreamTypes$3","id3","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","MP2T_PACKET_LENGTH$1","SYNC_BYTE$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","parsePes","pes","ptsDtsFlags","startPrefix","packetLength","forceFlush","packetFlushable","trackId","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","Stream$2","ExpGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","deltaScale","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData$1","percentEncode","parseIso88591","parseAdtsSize","lowThree","middle","highTwo","parseType$4","parseSampleRate","parseAacTimestamp","isLikelyAacData","parseType","Stream$1","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","AUDIO_PROPERTIES$1","audioProperties","VIDEO_PROPERTIES$1","videoProperties","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","toUnsigned$3","toHexString$1","bin","toUnsigned","toHexString","parseType$3","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","findBox_1","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags$1","parseSampleFlags_1","parseSampleFlags","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTrun$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","parseTfhd$2","compositionStartTime","getVideoTrackIds","getTracks","getTimescaleFromMediaHeader","getEmsgID3","window_1","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","findSeiNals","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","parseSamples","truns","allSamples","trackRun","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","parseEmbeddedCaptions","trackNals","CaptionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","captionParser","uint8ToCString$1","curChar","retString","uint8ToCString","getUint64$1","parseEmsgBox","boxData","scheme_id_uri","presentation_time","presentation_time_delta","event_duration","message_data","emsgBox","isValidEmsgBox","scaleTime","timeDelta","emsg","hasScheme","isValidV0Box","isDefined","isValidV1Box","emsg$1","parseType$1","parseTfhd","parseTrun","parseTfdt","traks","lowestTime","baseTime","trafBoxes","parsedTfhd","parsedTfdt","parsedTrun","hdlrs","tkhds","handlerType","getUint8","tkhdVersion","sampleDescriptions","codecConfig","codecConfigType","codecBox","segmentData","emsgBoxes","parsedBox","parsedId3Frames","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","probe$1","StreamTypes","probe","SYNC_BYTE","parsePsi_","table","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","audioTimescale","inspectTs_","inspect","isAacData","tsInspector","wireTransmuxerEvents","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","MessageHandlers","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","handleData_","transmuxedData","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","waitForEndedTimelineEvent","handleMessage","currentTransmux","dequeue","transmuxQueue","processAction","enqueueAction","transmux","createTransmuxer","term","segmentTransmuxer","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","handleInitSegmentResponse","encryptedBytes","parseError","handleSegmentResponse","newBytes","lastReachedChar","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","finish","id3Frames","probeResult","handleSegmentBytes","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","decryptionWorker","decryptionHandler","decrypted","keyBytes","encrypted","decryptSegment","requestId","decryptedBytes","waitForCompletion","didError","segmentFinish","endOfAllRequests","handleLoadEnd","loadendState","abortFn","calledAbortFn","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","keyRequestOptions","keyRequestCallback","keyXhr","differentMapKey","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","playlistController_","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","concatSegments","segmentObj","createCaptionsTrackIfNotExists","inbandTextTracks","def","captionService","addCaptionData","captionArray","Cue","deprecateOldCue","addMetadata","metadataArray","videoDuration","metadataTrack","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","removeDuplicateCuesFromTrack","duplicates","occurrences","dupe","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","QUOTA_EXCEEDED_ERR","getSyncSegmentCandidate","targetTime","timelineSegments","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","timestampOffsetForSegment","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","getPendingSegmentPlaylist","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","handleAppendError_","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","bufferTypes","sourceBuffer","queuePending","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","addSourceBuffer","mime","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","tmp","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","segmentLoaders","mainSegmentLoader","activeTrack","activeGroup","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","isMainPlaylist","onGroupChanging","onTrackChanged","lastTrack","pc","selectPlaylist","fastQualityChange_","excludePlaylist","defaultTrack","setupListeners","requestOptions","initialize","variantLabel","CLOSED-CAPTIONS","newProps","groupMatch","variants","groupKeys","groupPropertyList","activeTrack_","setupMediaGroups","audioSegmentLoader","activeAudioGroup","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_EXCLUSION_SECONDS","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","bufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","haveJsonSource","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","playlistOutdated","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","supportFunction","unsupportedCodecs","unsupportedAudio","supporter","variantAudioGroup","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","timeAhead","nextRange","currentRange","livePoint","videoUnderflow","videoUnderflow_","skipTheGap_","allowedEnd","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$4","version$3","version$2","version$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY","handleVhsMediaChange","handleVhsLoadedMetadata","emeKeySystems","keySystemOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","dataUri","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","option","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","excludedHDPlaylists","qualityLevels_","convertToProgramTime","VhsSourceHandler","simpleType","getOverrideNative","canUseMsePlayback","defaultOverrideNative","supportsNativeMediaSources","vttjs","WebVTT","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","consumeCueSettings","region","vals","vals0","integer","lineAlign","snapToLines","center","positionAlign","skipWhitespace","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","shouldAdd","annotation","rootDiv","tagStack","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","computeLinePos","textTrackList","mediaElement","StyleBox","CueStyleBox","styleOptions","styles","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","maxPosition","initialAxis","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","intersectArea","getSimpleBoxPosition","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","overlay","paddedOverlay","shouldCompute","hasBeenReset","margin","reportOrThrowError","collectNextLine","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","parseHeader","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","alignSetting","findDirectionSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","SyntaxError","getCueAsHTML","scrollSetting","findScrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","LiveStart","ref","LiveOpen","videoElement","TogglePlayer","onMounted","onBeforeUnmount","Count","LiveMsg","ctrlKey","SendLiveMsg","socket","WebSocket","onopen","ping","WsData","eval","sendMsg","sendDanmu","onclose","sendError","token","localStorage","axios","post","Authorization","gSendMsg","ws","_createElementVNode","_imports_0","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_4","__exports__","render","route","useRoute","metaTitle","meta","onBeforeRouteUpdate","LoginTrue","avatar","nickname","gender","GenderIconList","ApiReload","ApiData","MD5","__esModule"],"sourceRoot":""}